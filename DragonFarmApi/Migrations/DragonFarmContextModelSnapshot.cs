// <auto-generated />
using System;
using DragonFarmApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DragonFarmApi.Migrations
{
    [DbContext(typeof(DragonFarmContext))]
    partial class DragonFarmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DragonFarmApi.Models.Dragon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("HatchedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RarityScore")
                        .HasColumnType("float");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dragons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            HatchedAt = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Pyro",
                            RarityScore = 0.0,
                            Sex = 1
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            HatchedAt = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Astra",
                            RarityScore = 0.0,
                            Sex = 2
                        });
                });

            modelBuilder.Entity("DragonFarmApi.Models.DragonTrait", b =>
                {
                    b.Property<Guid>("DragonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TraitId")
                        .HasColumnType("int");

                    b.Property<string>("AlleleA")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("AlleleB")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("DragonId", "TraitId");

                    b.HasIndex("TraitId");

                    b.ToTable("DragonTraits");
                });

            modelBuilder.Entity("DragonFarmApi.Models.Trait", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DominantAllele")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecessiveAllele")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("Traits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DominantAllele = "R",
                            Name = "Color",
                            RecessiveAllele = "r"
                        },
                        new
                        {
                            Id = 2,
                            DominantAllele = "W",
                            Name = "WingSpan",
                            RecessiveAllele = "w"
                        },
                        new
                        {
                            Id = 3,
                            DominantAllele = "S",
                            Name = "Claw",
                            RecessiveAllele = "s"
                        });
                });

            modelBuilder.Entity("DragonFarmApi.Models.DragonTrait", b =>
                {
                    b.HasOne("DragonFarmApi.Models.Dragon", "Dragon")
                        .WithMany("Traits")
                        .HasForeignKey("DragonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DragonFarmApi.Models.Trait", "Trait")
                        .WithMany()
                        .HasForeignKey("TraitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dragon");

                    b.Navigation("Trait");
                });

            modelBuilder.Entity("DragonFarmApi.Models.Dragon", b =>
                {
                    b.Navigation("Traits");
                });
#pragma warning restore 612, 618
        }
    }
}
